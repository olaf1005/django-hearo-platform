# Generated by Django 2.2.9 on 2020-03-26 12:20

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="PasswordResetRequest",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_added", models.DateTimeField(auto_now_add=True)),
                ("date", models.DateField(default=datetime.date.today)),
                (
                    "kyc_image",
                    models.ImageField(
                        blank=True,
                        help_text="Enter a KYC image",
                        null=True,
                        upload_to="images/kyc",
                        verbose_name="KYC image",
                    ),
                ),
                (
                    "kyc_image_2",
                    models.ImageField(
                        blank=True,
                        help_text="Enter a second KYC image if required",
                        null=True,
                        upload_to="images/kyc_2",
                        verbose_name="KYC image 2",
                    ),
                ),
                (
                    "kyc_date",
                    models.DateTimeField(blank=True, null=True, verbose_name="Date"),
                ),
                (
                    "kyc_date_2",
                    models.DateTimeField(blank=True, null=True, verbose_name="Date"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("approved", "Approved"),
                            ("password reset", "Password reset"),
                            ("pending approval", "Pending approval"),
                            ("request denied", "Request denied"),
                            ("unverified", "Unverified"),
                            ("verified", "Verified"),
                        ],
                        default="unverified",
                        max_length=50,
                    ),
                ),
                (
                    "reason",
                    models.TextField(
                        help_text="Enter a reason for the request, e.g. user forgot password"
                    ),
                ),
                (
                    "partial_key",
                    models.TextField(
                        blank=True,
                        help_text="This is the partial key which will be removed once decrypted and sent to the user",
                        null=True,
                    ),
                ),
                (
                    "added_by",
                    models.ForeignKey(
                        help_text="Staff member who initiated the request",
                        limit_choices_to={"is_staff": True},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="added_password_reset_requests",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "assigned_to",
                    models.ForeignKey(
                        help_text="Assign next step of request to a user and send them an email",
                        limit_choices_to={"is_staff": True},
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assigned_password_reset_requests",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="The user making the request",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="password_reset_support_requests",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "password reset requests",
                "ordering": ("date",),
            },
        ),
        migrations.CreateModel(
            name="PasswordResetRequestAuthorizer",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateTimeField(auto_now_add=True, help_text="Auto")),
                (
                    "password",
                    models.CharField(
                        blank=True, default=None, max_length=100, null=True
                    ),
                ),
                (
                    "pgp_file",
                    models.FileField(blank=True, default=None, null=True, upload_to=""),
                ),
                (
                    "added_by",
                    models.ForeignKey(
                        help_text="The user who added the auathorization",
                        limit_choices_to={"is_staff": True},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="added_authorized_requests",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "authorizer",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user authorizing the request",
                        limit_choices_to={"is_staff": True},
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="authorized_requests",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "password_reset_request",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="support.PasswordResetRequest",
                    ),
                ),
            ],
            options={"verbose_name_plural": "authorizers", "ordering": ("date",),},
        ),
        migrations.CreateModel(
            name="GeneralRequest",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateTimeField(auto_now_add=True, help_text="Auto")),
                (
                    "kyc_image",
                    models.ImageField(
                        blank=True,
                        help_text="Enter a KYC image if required",
                        null=True,
                        upload_to="images/kyc",
                    ),
                ),
                (
                    "kyc_date",
                    models.DateTimeField(
                        blank=True, help_text="This field is auto populated", null=True
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("needs more info", "Needs more info"),
                            ("fixed", "Fixed"),
                            ("request denied", "Request denied"),
                            ("unverified", "Unverified"),
                            ("verified", "Verified"),
                            ("cant fix", "Can't fix"),
                        ],
                        default="unverified",
                        max_length=50,
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("music upload", "Music upload"),
                            ("privacy", "Privacy"),
                            ("music", "Music"),
                            ("images", "Images"),
                            ("profiles", "Profiles"),
                        ],
                        default="unverified",
                        max_length=50,
                    ),
                ),
                (
                    "request",
                    models.TextField(
                        help_text="Enter a the request, e.g. user cant upload a song"
                    ),
                ),
                (
                    "assigned_to",
                    models.ForeignKey(
                        help_text="Assign next step of request to a user and send them an email",
                        limit_choices_to={"is_staff": True},
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assigned_general_requests",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="The user making the request",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="general_support_requests",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={"verbose_name_plural": "general requests", "ordering": ("date",),},
        ),
    ]
