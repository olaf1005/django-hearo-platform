# Generated by Django 2.2.9 on 2021-08-31 15:12

from django.db import migrations

import logging

logger = logging.getLogger(__name__)


def remove_private_key(transfer):
    transfer_data = transfer.data.copy()
    for key, _ in enumerate(transfer_data):
        if "privateKey" in transfer_data[key]["fromAccount"]:
            del transfer_data[key]["fromAccount"]["privateKey"]
    transfer.data = transfer_data
    transfer.save()


def find_and_remove_all_private_keys_for_successful_transactions(apps, schema_editor):
    """
    Remove private keys from data
    """
    HTSTokenTransfer = apps.get_model("accounts", "HTSTokenTransfer")
    transfers = HTSTokenTransfer.objects.exclude(data=None).filter(success=True)
    logger.info("removing keys from %s successful transfers", transfers.count())
    for transfer in transfers:
        remove_private_key(transfer)


def reverse_remove_all_private_keys(apps, schema_editor):
    logger.warn("Reverse removing private keys not possible")


class Migration(migrations.Migration):

    dependencies = [
        ("accounts", "0017_wallet_account_associated_with_token"),
    ]

    operations = [
        migrations.RunPython(
            find_and_remove_all_private_keys_for_successful_transactions,
            reverse_remove_all_private_keys,
        ),
    ]
